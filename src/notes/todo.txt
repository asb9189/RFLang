- Allow return statements to have an empty expression (parsing issue)
    - idea: Only use return if you want to return a value, otherwise use a 'break'
    statement. Otherwise, parsing would get messy unless I wanted to add a semicolon.

- object class
    idea: Abstract Object class that each object overrides.
    Each object will have an enum list of available methods with their
    implementation living inside the class (both stdlib objects and user defined ones)
    - Ex: ArrayList

    - Building an ArrayList ex:
        "let myList = List[]"
            or
        "let myList = List[1, 2, 3]"

    - method detection would be: <IDENTIFIER>.<IDENTIFIER>(<PARAMS>)

- iterator interface for objects
    - would allow support for a 'for each loop'

- fix recursive functions (issue has to do with popping off from functionStack too soon)