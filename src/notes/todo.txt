- Allow return statements to have an empty expression (parsing issue)
    - idea: Only use return if you want to return a value, otherwise use a 'break'
    statement. Otherwise, parsing would get messy unless I wanted to add a semicolon.

- stdlib
    - Goal would be to have stdlib functions and user defined functions
    to work together in the same format. I would like to prevent having
    strange edge cases for this. Maybe a FunctionDispatcher class could
    do the heavy lifting of figuring out how to execute a stdlib vs user defined
    function and ensuring either way we get back an RFLang value type (even if it's null)

- object class
    idea: Abstract Object class that each object overrides.
    Each object will have an enum list of available methods with their
    implementation living inside the class (both stdlib objects and user defined ones)
    - Ex: ArrayList

- iterator interface for objects
    - would allow support for a 'for each loop'

- fix recursive functions (issue has to do with popping off from functionStack too soon)